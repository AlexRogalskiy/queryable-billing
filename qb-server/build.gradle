import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

plugins {
    id 'org.springframework.boot' version '1.4.3.RELEASE'
}

apply plugin: 'com.bmuschko.docker-remote-api'

dependencies {
    configurations.all {
        exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }

    compile project(':qb-common')
    compile('org.springframework.boot:spring-boot-starter-web',
            "org.apache.flink:flink-streaming-java_2.11:$flinkVersion",
            "org.apache.flink:flink-java:$flinkVersion")

    testCompile('org.springframework.boot:spring-boot-starter-test',
            'org.spockframework:spock-spring:1.0-groovy-2.4')
}

bootRepackage {
    mainClass = 'com.tngtech.qb.QueryableBillingServer'
}

def cert = new File(System.properties['user.home'], '.docker/machine/machines/default')
if (cert.exists()) {
    docker{
        certPath = cert
    }
}

task createDockerfile(type: Dockerfile) {
    dependsOn bootRepackage
    destFile = project.file('build/Dockerfile')
    from 'qb-flink'
    addFile("resources/main/start.sh", ".")
    user("root")
    runCommand("chmod +x start.sh")
    user("flink")
    addFile("libs/${project.name}-${project.version}.jar", ".")
    defaultCommand("./start.sh")
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.parentFile
    tag = "${project.name}:${project.version}"
}


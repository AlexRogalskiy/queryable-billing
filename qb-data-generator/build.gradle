import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.bmuschko.docker-remote-api'

ext.sfl4jVersion = '1.7.21'
ext.log4jVersion = '2.8.1'

dependencies {

    compile "org.slf4j:slf4j-api:${sfl4jVersion}"
    compile "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    compile 'org.apache.kafka:kafka-clients:0.10.0.1'
    compile 'joda-time:joda-time:2.9.7'
    compile project(':qb-common')
}

shadowJar {
    manifest {
        attributes 'Main-Class': 'com.tngtech.qb.BillableEventGenerator'
    }
}

task createDockerfile(type: Dockerfile) {
    dependsOn shadowJar
    destFile = project.file('build/Dockerfile')
    from 'java:8-jre-alpine'
    addFile("libs/${shadowJar.archiveName}", ".")
}


def cert = new File(System.properties['user.home'], '.docker/machine/machines/default')
if (cert.exists()) {
    docker{
        certPath = cert
    }
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.parentFile
    tag = "${project.name}:${project.version}"
}